
TODO
//-finish DateParser tests
//-write date parser code, get tests to pass
//-have console/loop consume gmail/gcalendar interfaces before writing concrete classes
//-Got general outline of MailProcessor in place, created test project for Google
//-rename mail reader, calendar writer to be more generic

-bleh. next step is to SIMULATE from the console, to bypass the google api crap


-create concrete gmailreader/ gcal writer class	
	-see what's needed to consume google api
		-or possibly another email web app or other messaging system
		google search "read gmail c sharp"
	-create concrete class
	
-get gcalendar writer working
	-test first? no, because not sure how it will work
	-create concrete class
	-see what's needed to consume google api

-finish console app to instantiate conrete gmailreader, transcriptparser with needed config
-make sure to commit in working state
-show how easy it is to reformat date format expected
-use what you have so far to test many of the scenarios you want to test



GoogleAccount

messagingApplication001
MyAppFor1



DateParser
-could demonstrate how to easily change formats that it can read	
-create a dummy db layer (or something that can be mocked)	


-set up slides
	-get the official LA slide going, make sure you can publish the presentation
		-C:\Users\andrewb\Documents\Training\UnitTestingLL\
	-implement outline
	


REFACTORS
-refactor return message - instead of returning null on fail, return meaningful message








		











	
	
